package Daa;

import java.util.Scanner;

public class NQueen

  {
 private static void printBoard(int[][] board, int n)

   {

    for (int i = 0; i < n; i++)

 {
    for (int j = 0; j < n; j++)
 {
System.out.print((board[i][j] == 1 ? "Q " : ". "));
}
System.out.println();
} }
private static boolean isSafe(int[][] board, int row, int col, int n)
 {
    for (int i = 0; i < col; i++)
              {
                if (board[row][i] == 1) return false;  }
                                           for (int i = row, j = col; i >= 0 && j >= 0; i--, j--)
                                           {
                                                          if (board[i][j] == 1) return false;
                                           }
                                           for (int i = row, j = col; i < n && j >= 0; i++, j--)
                                           {
                                                          if (board[i][j] == 1) return false;
                                           }
                                           return true;
                             }
                             private static boolean solveNQueens(int[][] board, int col, int n)
                             {
                                           if (col >= n) return true;
                                           for (int i = 0; i < n; i++)
                                           {
                                                          if (isSafe(board, i, col, n))
                                                          {
                                                                     board[i][col] = 1;
                                                                        if (solveNQueens(board, col + 1, n))
                                                                        {
                                                                            return true;
                                                                        }
                                                                        board[i][col];}
                                           }
                                           return false;
                             }
                             public static void main(String[] args)
                             {
                                          Scanner scanner = new Scanner(System.in);
                                           System.out.print("Enter the value of N (size of the board): ");
                                          int n = scanner.nextInt();
                                          int[][] board = new int[n][n];
                     if (solveNQueens(board, 0, n))

                                           {
                                                          System.out.println("Solution for " + n + "-Queens problem:")
                                                           printBoard(board, n);

                                           }
                                           else
                                           {
                                                        System.out.println("No solution exists for " + n + "-Queensproblem.");

                                           }
                                           scanner.close();
                           }
}



package UIT833;
import java.util.*;
public class NQueens {
	static int count = 0;

	public static boolean isSafe(char board[][],int row,int column) {
		for(int i=row-1;i>=0;i--) {
			if(board[i][column]=='Q') {
		return false;
			}
		}
		for(int i=row-1,j=column-1;i>=0 && j>=0;i--,j--) {
			if(board[i][j]=='Q') {
			return false;
			}
		}
		for(int i=row-1,j=column+1;i>=0 && j<board.length;i--,j++) {
			if(board[i][j]=='Q') {
			return false;
			}
		}
		return true;
	}


	public static void nQueens(char board[][],int rows) {
		if(rows==board.length) {
			count++;
			printBoard(board);
			return; 
		}
		for(int j=0;j<board.length;j++) {
			if(isSafe(board,rows,j)) {
				board[rows][j]='Q';
				nQueens(board,rows+1);
				board[rows][j]='X';
			}
		}
	}	

	public static void printBoard(char board[][]) {
		System.out.println("------Chess Board------");
		for(int i=0;i<board.length;i++) {
			for(int j=0;j<board.length;j++) {
				System.out.print(board[i][j] + " ");
			}
			System.out.println();
		}
		System.out.println();
	}

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter size of chessboard(n): ");
		int n = sc.nextInt();
		char board[][] = new char[n][n];
		for(int i=0;i<n;i++) {
			for(int j=0;j<n;j++) {
				board[i][j]='x';
			}
		}

		nQueens(board,0);
		System.out.println("Total no.of ways:"+count);
sc.close();
	}
}



 
